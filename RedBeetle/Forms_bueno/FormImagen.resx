<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picInicio.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAANgAAAAsCAYAAAAHI3biAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAAAAd0SU1FB+MFDg8QA6ysPxkAAATVSURBVHhe7Ztbbtw4EEX9PSvKLmZzs5hB1pFN
        zE8CBEm3HzE9ktW0JOreqqJY1UGAOsCJlOZlkZTN7nY/Ht6SJAkjN1iSBJIbLEkCyQ2WJIHkBkuSQHKD
        JUkg8wZL0zRIeGOapj7CG9M09RHemKZ/lL9+Pby9vBxF2TtbT/x4fNwNYPL5eT6e4Wy/lfmH085nXDfK
        jx+ovuzY9eSO141AqlvHHXNg3bWIP8ukZJdf7hFG+6+8vu7nNqY/1ysaZ6/P9TzqVzcCqW4d95wO667F
        YhAezcrT09/TcZS5lhvl69fDPE8aQvn5E431brlcPk3HUaLrRiDV/VhHr17rrgUj2U38pheetba08+01
        ksjxoutGINWt4/bqxV022EzE5Gci576dc6/RRI0VXTcCqW4dt0dP7rzBlqeMnsTN/XKp1+aM0SzjxFzP
        uLoxSHXruDYD1l2LM9bBmcvLoRo1b2GtbZOBsoulzEcLx742GSh7VJ9fzVpY69q1gPqNyEDZVgbKSlr4
        yJeb29ta6wljF1aUeCjfv4uZgRcYGCi7szw9/TcdKeXbN9jPIANlsfK9adj1DPw5aTJQtpWBstAz677v
        BpPfK5DapjvsaZptPbsMlEVqoD6aDJRdnR+5bE9TxEx5fZ0v6L62XcpgXU0GyrYyUJZJwesumw32/owD
        Wk8Yu7CihKVdy7RofWq7RQmU12RIbT1odbR5ICx9RupqMlC2lYGyTAlLpuW9j9axtu+d35S9XB7K4+OX
        6f8W5n6Q8vz8eTrU2j1ofWq7RQmU12RIbSZu78/QOuV6/Wc6aPNAiH0c6moyULaVgbJMyOi6tY69RQ9s
        /o7B7D9B0YPWZ1tXdpkD45jXZUhtVuQxoq7neF1NBsq2MlCWiRlct9axtyhCHmP5m0POYLQ+27qit8/7
        MQ55gwypTWW6N/13OshjRF3P8bqaDJRtZaAsEzO4bq1jb9GWWl+rY8m0aH1qu0UJlNdkSG0mtKeIN7R5
        ICx9RupqMlC2lYGyTAlLpuW9j9axt2hLrS/XWd736R1L61PbZfVPSh/76DKkth7kOjHXc7SuJgNlWxko
        y+QMrFvr2FsUoY1RqbleGSiL1EB9NBkou+r0Mv2NfW27GqiPhwyUbWWgLFMD9VGtJwypzUb9yNFyL6BR
        59MjA2VXLV9FOP+lPQbKYpevpzDirmfcz0mTgbKtDJTFBq27njB2Yaj/R6V6f7EZKKv94rYc+9tkoOzq
        9OhVrte/pnON2sdG/x2FjfN3QEgGyrYyUFbSRse66wljF6bqT2u2eU+keqNjbefcazRRY92jLpOBsq1e
        eNaacdpgixJrbvxbolukWufHWeY4Yhi3N/fXsfyvZ2xdLgNlW71wX7c2wdquKz+K7bN+i9DG7Gf/xuJZ
        IzmO53s94+tiGSjb6sVSz3Hd2gRru1UGys6OItU4U387txGjQGNtHQXVnB0F1WxloGyrF951f/sGs74s
        zZD62uv6/rE+GwEa5+j49cRG1V1loGyrF8fag+uuhRjrQDYZKHvw9rWAHuZ+DKlt5LteFocpLy/X0Y1/
        8nqqBtVloGyrF6j2h2fWDQulaeojvDFNUx/hjWma+ghvTNPUx/mfJEmCyA2WJIHkBkuSQHKDJUkgucGS
        JJDcYEkSxtvb/yfRQnN4Rj1+AAAAAElFTkSuQmCC
</value>
  </data>
</root>